{"version":3,"file":"component---src-templates-blog-post-tsx-369c538350f3418ddf31.js","mappings":"6NA8GaA,EAA4B,SAAH,GAA2C,IAAbC,EAAI,EAA5BC,KAAQC,eAClD,OACEC,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOL,EAAKM,YAAYD,MACxBE,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,SAGxD,EAEA,UAvE0D,SAAH,GAGjD,UAFJP,KAAQQ,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAsBX,EAAI,EAApBE,eAC9BU,EAAQ,EAARA,SAEMC,GAA6B,QAAjB,EAAAF,EAAKG,oBAAY,aAAjBC,EAAmBV,QAAS,QAE9C,OACEF,EAAAA,cAACa,EAAAA,EAAM,CAACJ,SAAUA,EAAUP,MAAOQ,GACjCV,EAAAA,cAAAA,UAAAA,CACEc,UAAU,YACVC,WAAS,EACTC,SAAS,6BAEThB,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIiB,SAAS,YAAYpB,EAAKM,YAAYD,OAC1CF,EAAAA,cAAAA,IAAAA,KAAIH,EAAKM,YAAYe,OAEvBlB,EAAAA,cAAAA,UAAAA,CACEmB,wBAAyB,CAAEC,OAAQvB,EAAKwB,MACxCJ,SAAS,gBAEXjB,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAACsB,EAAAA,EAAG,QAGRtB,EAAAA,cAAAA,MAAAA,CAAKc,UAAU,iBACbd,EAAAA,cAAAA,KAAAA,CACEuB,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX5B,EAAAA,cAAAA,KAAAA,KACGM,GACCN,EAAAA,cAAC6B,EAAAA,KAAI,CAACC,GAAIxB,EAASyB,OAAOC,KAAMC,IAAI,QAAM,KACrC3B,EAASH,YAAYD,QAI9BF,EAAAA,cAAAA,KAAAA,KACGO,GACCP,EAAAA,cAAC6B,EAAAA,KAAI,CAACC,GAAIvB,EAAKwB,OAAOC,KAAMC,IAAI,QAC7B1B,EAAKJ,YAAYD,MAAK,SAQvC,C","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\ninterface MarkdownRemark {\n  frontmatter: {\n    title: string;\n    data: string;\n    description: string;\n    date: string;\n  }\n  fields: {\n    slug: string;\n  }\n  excerpt: string;\n}\n\ninterface BlogPostTemplateProps {\n  data: {\n    previous: MarkdownRemark;\n    next: MarkdownRemark;\n    site: {\n      siteMetadata?: {\n        title: string;\n      };\n    };\n    markdownRemark: {\n      frontmatter: {\n        title: string;\n        data: string;\n        description: string;\n        date: string;\n      }\n      fields: {\n        slug: string;\n      }\n      excerpt: string;\n      html: string;\n    };\n  };\n  location: {\n    pathname: string;\n  }\n}\n\nconst BlogPostTemplate: React.FC<BlogPostTemplateProps> = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || \"Title\";\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\",\n            listStyle: \"none\",\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\ninterface HeadProps {\n  data: {\n    markdownRemark: MarkdownRemark;\n  }\n}\n\nexport const Head: React.FC<HeadProps> = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["Head","post","data","markdownRemark","React","Seo","title","frontmatter","description","excerpt","previous","next","site","location","siteTitle","siteMetadata","_site$siteMetadata","Layout","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}